=======
Logging
=======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _logging:

Overview
--------

.. What is on this page?

In this guide, we show you how to set up and configure a logger in the
MongoDB Java Driver.

.. What do any new terms mean?

.. Not applicable. We are treating definition of logger as understood.

.. What can you expect to see on this page?

In this guide you will learn how to:

- Set up a logger
- Configure your log level
- Filter your logs

.. Who should read this? Where should I go if this isn't the page I was looking for?

.. Not Applicable


Set Up a Logger
---------------

To set up a logger for your project, you need to add some dependencies.

The MongoDB Java Driver uses the Simple Logging Facade For Java (SLF4J).
SLF4J allows you to specify your logging framework of choice at deployment time.
For more information on SLF4J,
`see the SLF4J documentation <http://www.slf4j.org/>`__.

To set up a logger, add the ``slf4j-api`` and a **binding** to your project's
dependency list. A binding is the underlying logging
framework the ``slf4j-api`` will use to output log messages. Some popular logging
frameworks used as bindings are ``Log4J2``, ``Logback``, and
``java.util.logging``.

Below are some examples demonstrating how to add SLF4J dependencies to your
project and set up your logger. 

If you are using Maven, add the following to your ``pom.xml`` dependencies list:

Log Levels
----------


Filter On a Specific Class
--------------------------